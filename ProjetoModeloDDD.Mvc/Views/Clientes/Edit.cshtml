@model ProjetoModeloDDD.Mvc.ViewModels.ClienteViewModel

@{
    ViewBag.Title = "Editar Cliente";
}

<h2 class="mb-4"><i class="bi bi-pencil-square"></i> Editar Cliente</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="mb-3">
        <h4><i class="bi bi-person-circle"></i> Informações do Cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ClienteId)

        <!-- Campo Nome -->
        <div class="mb-3 row">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10 input-group">
                <span class="input-group-text"><i class="bi bi-person"></i></span>
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Campo Sobrenome -->
        <div class="mb-3 row">
            @Html.LabelFor(model => model.Sobrenome, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10 input-group">
                <span class="input-group-text"><i class="bi bi-person-badge"></i></span>
                @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Campo Email -->
        <div class="mb-3 row">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10 input-group">
                <span class="input-group-text"><i class="bi bi-envelope"></i></span>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Campo Ativo (Checkbox) -->
        <div class="mb-3 row">
            @Html.LabelFor(model => model.Ativo, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                <div class="form-check">
                    @Html.EditorFor(model => model.Ativo, new { htmlAttributes = new { @class = "form-check-input" } })
                    @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <!-- Botão de Enviar -->
        <div class="mb-3 row">
            <div class="col-sm-10 offset-sm-2">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save"></i> Salvar
                </button>
            </div>
        </div>
    </div>
}

<!-- Link para voltar à lista -->
<div class="mt-3">
    <a href="@Url.Action("Index")" class="btn btn-secondary">
        <i class="bi bi-arrow-left-circle"></i> Voltar para a Lista
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
